<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OpinionTrade</title>
    <link rel="icon" href="https://t4.ftcdn.net/jpg/05/97/06/33/360_F_597063320_zWzNOwBIEDbsUPUj0NAtilvkGVMdGTPz.jpg"
         type="image/x-icon" />
    <link rel="stylesheet" href="style.css">
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.3.0/fonts/remixicon.css" rel="stylesheet" />
    <script src="tabsbox.js" defer></script>
    <style>
        #strip {
            width: 100%;
            height: 8%;
            background-color: rgb(40, 40, 40);
            color: white;
            text-align: center;
            align-items: center;
            display: flex;
            justify-content: center;
            position: fixed;
            z-index: 1;
        }

        #page1 {

            height: auto;
            height: 90vh;
            width: 100%;
            background-color: rgb(255, 255, 255);
            animation: slide 1s 1;
        }

        @keyframes slide {
            0% {
                transform: translateY(-100%);
            }

            100% {
                transform: translateY(0%);
            }
        }

        #poll-page {
            padding-top: 7%;
            width: 100%;
            height: auto;
            display: grid;
            align-items: center;
            justify-content: center;
        }


        .poll {
            /* position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); */
            margin-bottom: 10%;
            display: grid;
            align-items: center;
            justify-content: space-evenly;
            width: 400px;
            height: 350px;
            background: #fff;
            border: 1px solid rgb(200, 200, 200);
            border-radius: 10px;
            box-shadow: 1px 1px 10px 10px rgba(66, 66, 66, 0.05);


        }

        .poll .question {
            padding: 20px 20px 10px;
            color: #111;
            font-size: 20px;
            border-bottom: 1px solid rgb(186, 186, 186);

        }

        .poll .answers {
            padding: 20px 20px 10px;
        }

        .poll .answers .answer {
            position: relative;
            width: 100%;
            height: 40px;
            padding: 0px 10px;
            line-height: 40px;
            color: black;
            margin-bottom: 10px;
            border: 1px solid #d4d4d4;
            border-radius: 10px;
            cursor: pointer;
            overflow: hidden;


        }

        .poll .answers .answer.selected {
            border: 2px solid #8f9f98;
        }

        .poll .answers .answer span.percentage-value {
            position: absolute;
            top: 50%;
            right: 0px;
            width: 40px;
            transform: translateY(-50%);
            color: #111;
            font-size: 15px;

        }

        /* .poll .answers .answer span.percentage-bar {
            position: absolute;
            top: 0px;
            left: 0px;
            width: 40px;
            height: 100%;
            background: #ccd8f1;
            z-index: 1;
            transition: width 300ms ease-in-out;

        } */

        .poll .answers .answer span.percentage-bar {
            position: absolute;
            top: 0px;
            left: 0px;
            width: 0;
            /* Initially hidden */
            height: 100%;
            background: #ccd8f14b;
            /* z-index: -1; */
            transition: width 300ms ease-in-out, opacity 300ms ease-in-out;
            opacity: 0;
            /* Initially fully transparent */
        }

        .poll .answers .answer.selected span.percentage-bar {
            opacity: 1;

            /* Show the percentage bar when answer is selected */
        }

        /* .poll .answers .answer span.percentage-bar {
    position: absolute;
    top: 0px;
    left: 0px;
    width: 40px;
    height: 100%;
    background: #ccd8f1;
    z-index: -1;
    transition: width 300ms ease-in-out;

} */
    </style>

</head>

<body>
    <div id="main">
        <div id="header">
            <div id="header1">
                <div id="logo"><img
                        src="https://t4.ftcdn.net/jpg/05/97/06/33/360_F_597063320_zWzNOwBIEDbsUPUj0NAtilvkGVMdGTPz.jpg"
                        width="100%" height="100%" style="object-fit: cover;"></div>
                <div class="texts">
                    <a href="/account">
                        <p style="color: rgb(45, 45, 45);">Account</p>
                    </a>
                </div>
                <div class="texts">
                    <a href="https://vcet.edu.in/" target="_blank">
                        <p style="color: rgb(41, 41, 41); ">VCET</p>
                    </a>
                </div>
                <div class="texts">
                    <a href="/allevent">
                        <p style="color: rgb(45, 45, 45);">Poll</p>
                    </a>
                </div>
                <div class="texts">
                    <a href="/customer">
                    <p style="color: rgb(45, 45, 45);">Customers</p>
                    </a>
                </div>

                <div class="texts">
                    <a href="/leaderboard">
                    <p style="display: flex ; align-items: center; justify-content: center; color: rgb(45, 45, 45);" >Leaderboard <img src="https://cdn-icons-png.flaticon.com/128/7799/7799179.png"  style=" width: 27px; padding-left: 5px; "></p>
                    </a>
                </div>
                <div id="contactde">
                    <p style=text-align:center;><u>Contact Us</u> </p>
                    <p>9988-00-6677</p>
                </div>
            </div>
            <div id="header2">
                <div class="icon"><i class="ri-search-line"> </i></div>
                <div class="icon"><i class="ri-global-line"> </i></div>
                <div id="login">
                    <form action="/logout" method="post">
                        <button type="submit"
                            style="border-radius: 55px; padding: 10px; color: white; background: #000; width: 80px; cursor: pointer; ">
                            <i class="ri-user-3-fill"></i>Logout</button>

                    </form>
                    {{!-- <a href="/login_signup">
                        <p>Login</p>
                    </a> --}}
                </div>
                <div id="try">
                    <a href="/index">
                        <p>OpinionTrade</p>
                    </a>
                </div>
            </div>
        </div>

        <div id="fakeheader"></div>
        <div id="page1">
            <div id="strip">


                <div class="wrapper">
                    <div class="icons"><i id="left" class="ri-arrow-left-wide-line"></i></div>
                    <ul class="tabs-box">
                        <li class="tab"><a href="/allevent">Allevent</a></li>
                        <li class="tab"><a href="/cricket">Cricket</a></li>
                        <li class="tab"><a href="/tech">Technology</a></li>
                        <li class="tab"><a href="/news">News</a></li>
                        <li class="tab"><a href="/sustain">Sustainability</a></li>
                        <li class="tab"><a href="/health">Health&Wellness</a></li>
                        <li class="tab"><a href="/education">Education</a></li>
                        <li class="tab"><a href="/entertainment">Entertainment</a></li>
                        <li class="tab"><a href="/sports">Sports</a></li>
                        <li class="tab"><a href="/consumer">Consumer Preferences</a></li>
                        <li class="tab"><a href="/gadgets">Gadgets</a></li>
                        <li class="tab"><a href="/tour">Tour&Travel</a></li>
                        <li class="tab"><a href="/economy">Finance&Economy</a></li>
                        <li class="tab"><a href="/sharemarket">Share Market</a></li>
                        <li class="tab"><a href="/gaming">Gaming&Esports</a></li>
                        <li class="tab"><a href="/food">Food&Beverages</a></li>
                    </ul>
                    <div class="icons"><i id="right" class="ri-arrow-right-wide-fill"></i></div>
                </div>

            </div>


            <div id="poll-page">
                <div class="poll">
                    <div class="question"></div>
                    <div class="answers"></div>
                </div>
            </div>

        </div>


    </div>
    {{!-- <script>
        let polls = [
            {
                question: "How often do you exercise each week?",
                answers: ["Daily", "3-5 times a week", "1-2 times a week", "Rarely or never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Do you follow a specific diet (e.g., keto, vegan, intermittent fasting)?",
                answers: ["Yes, strictly", "Yes, loosely", "No, but Iâ€™m considering it", "No"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How frequently do you use fitness apps to track your workouts?",
                answers: ["Always", "Frequently", "Occasionally", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How important is mental health to you compared to physical health?",
                answers: ["More important", "Equally important", "Less important", "Not important"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Do you regularly take supplements or vitamins?",
                answers: ["Daily", "Occasionally", "Rarely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How often do you schedule regular medical checkups?",
                answers: ["Annually", "Every few years", "Only when necessary", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How frequently do you participate in meditation or mindfulness activities?",
                answers: ["Daily", "Weekly", "Occasionally", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Do you prefer working out at home, at the gym, or outdoors?",
                answers: ["At home", "At the gym", "Outdoors", "I donâ€™t work out"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How do you manage stress on a daily basis?",
                answers: ["Exercise", "Meditation/mindfulness", "Socializing with friends/family", "I donâ€™t actively manage stress"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How important is sleep in your wellness routine?",
                answers: ["Extremely important", "Somewhat important", "Not very important", "Not important at all"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Do you use wearable tech (e.g., fitness trackers) to monitor your health?",
                answers: ["Yes, daily", "Yes, occasionally", "Rarely", "No"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How often do you seek advice from online health communities?",
                answers: ["Frequently", "Occasionally", "Rarely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Do you think technology plays a positive role in mental health management?",
                answers: ["Yes, very positive", "Yes, somewhat positive", "Neutral", "No, it has a negative impact"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How much do you spend on fitness-related products monthly?",
                answers: ["Over $100", "$50-$100", "$10-$50", "Less than $10"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How likely are you to use telemedicine services for non-emergencies?",
                answers: ["Very likely", "Somewhat likely", "Not likely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How often do you consume organic or locally grown food?",
                answers: ["Always", "Frequently", "Occasionally", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How important is work-life balance for your overall well-being?",
                answers: ["Very important", "Somewhat important", "Neutral", "Not important"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Do you practice yoga or other low-impact exercises?",
                answers: ["Regularly", "Occasionally", "Rarely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How frequently do you try new wellness trends (e.g., cold plunges, cryotherapy)?",
                answers: ["Often", "Occasionally", "Rarely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How often do you consult with a nutritionist or dietician?",
                answers: ["Regularly", "Occasionally", "Rarely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How comfortable are you with fitness programs integrated into your daily life (e.g., wearables prompting exercise)?",
                answers: ["Very comfortable", "Somewhat comfortable", "Neutral", "Not comfortable"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How frequently do you visit a spa or wellness center?",
                answers: ["Regularly", "Occasionally", "Rarely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Do you focus more on cardio, strength training, or flexibility in your workouts?",
                answers: ["Cardio", "Strength training", "Flexibility", "I donâ€™t work out"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How often do you detox (e.g., juice cleanses, fasting)?",
                answers: ["Regularly", "Occasionally", "Rarely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How important is a personalized diet plan to you?",
                answers: ["Very important", "Somewhat important", "Neutral", "Not important"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Do you prioritize gut health when making food choices?",
                answers: ["Always", "Frequently", "Occasionally", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How likely are you to use mental health apps to manage stress and anxiety?",
                answers: ["Very likely", "Somewhat likely", "Not likely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Do you consider wellness retreats or vacations as part of your routine?",
                answers: ["Yes, regularly", "Occasionally", "Rarely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "How often do you seek holistic remedies (e.g., acupuncture, herbal medicine)?",
                answers: ["Regularly", "Occasionally", "Rarely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Do you have a routine for tracking your water intake daily?",
                answers: ["Yes, daily", "Occasionally", "Rarely", "Never"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "What wellness-related purchases have you made in the past 6 months?",
                answers: ["Fitness equipment", "Health supplements", "Meditation apps", "Healthy food products"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "Would you be interested in trying personalized nutrition or wellness plans based on DNA testing?",
                answers: ["Yes, I already have", "Yes, I would be interested", "No, Iâ€™m not interested"],
                pollCount: 0,
                answerWeight: [0, 0, 0],
                selectedAnswer: -1,
            },
            {
                question: "What motivates you most to stay physically active?",
                answers: ["Health concerns", "Weight loss", "Improving mental well-being", "Social interaction"],
                pollCount: 0,
                answerWeight: [0, 0, 0, 0],
                selectedAnswer: -1,
            }
        ];


        let pollContainer = document.getElementById('poll-page');


         // Shuffle function to randomize the order of polls
        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
        }

        function renderPoll(poll, index) {
            let pollHTML = `
            <div class="poll" id="poll-${index}">
                <div class="question">${poll.question}</div>
                <div class="answers">
                    ${poll.answers.map((answer, i) => `
                        <div class="answer" onclick="markAnswer(${index}, ${i})">
                            ${answer}
                            <span class="percentage-bar"></span>
                            <span class="percentage-value"></span>
                        </div>
                    `).join("")}
                </div>
            </div>
        `;
            return pollHTML;
        }

        function renderAllPolls() {
            pollContainer.innerHTML = polls.map((poll, index) => renderPoll(poll, index)).join("");
        }

        // Shuffle the polls before rendering
        shuffleArray(polls);
        renderAllPolls();


        function markAnswer(pollIndex, answerIndex) {
            let poll = polls[pollIndex];
            poll.selectedAnswer = answerIndex;


            try {
                document.querySelector(`#poll-${pollIndex} .answer.selected`)?.classList.remove("selected");
            } catch (msg) { }


            document.querySelectorAll(`#poll-${pollIndex} .answer`)[answerIndex].classList.add("selected");

            showResults(pollIndex);
        }


        function showResults(pollIndex) {
            let poll = polls[pollIndex];
            let answers = document.querySelectorAll(`#poll-${pollIndex} .answer`);
            for (let i = 0; i < answers.length; i++) {
                let percentage = 0;
                if (i === poll.selectedAnswer) {
                    percentage = Math.round((poll.answerWeight[i] + 1) * 100 / (poll.pollCount + 1));
                } else {
                    percentage = Math.round(poll.answerWeight[i] * 100 / (poll.pollCount + 1));
                }

                let percentageBar = answers[i].querySelector(".percentage-bar");
                percentageBar.style.width = percentage + "%";
                percentageBar.style.opacity = 1;
                answers[i].querySelector(".percentage-value").innerText = percentage + "%";
            }
        }


        function savePollToDB(poll, category) {
            fetch('/save-poll', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    ...poll,
                    category, // Pass category to backend
                }),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log('Poll saved:', poll.question);
                    } else {
                        console.error('Error saving poll:', data.message);
                    }
                })
                .catch(error => console.error('Error:', error));
        }


         // Save polls under a specific category, for example, 'cricket'
        polls.forEach(poll => {
            savePollToDB({
                question: poll.question,
                answers: poll.answers,
                answerWeight: poll.answerWeight,
                pollCount: poll.pollCount,
            }, 'health'); // Specify category
        });



    </script> --}}



        <script>
        const userId = "{{userId}}"; // Embedding userId from the server
        let polls = [];
        let pollContainer = document.getElementById('poll-page');

        // Fetch polls from the backend
        function fetchPolls() {
            fetch('/polls/health')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        polls = data.polls;
                        renderAllPolls();
                    } else {
                        console.error('Failed to fetch polls:', data.message);
                    }
                })
                .catch(error => console.error('Error:', error));
        }

        // Shuffle polls array to randomize order
        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
        }


        function calculatePercentage(answerWeight, pollCount) {
            if (pollCount === 0) {
                return 0; // Avoid division by zero
            }
            return Math.round((answerWeight * 100) / pollCount);
        }


        // Render a single poll
        function renderPoll(poll, index) {
            let pollHTML = `
        <div class="poll" id="poll-${index}">
            <div class="question">${poll.question}</div>
            <div class="answers">
                ${poll.answers.map((answer, i) => `
                    <div class="answer ${poll.selectedAnswer === i ? 'selected' : ''} ${poll.selectedAnswer !== -1 ? 'disabled' : ''}" 
                        onclick="${poll.selectedAnswer === -1 ? `markAnswer(${index}, ${i})` : ''}">
                        ${answer}
                        ${poll.selectedAnswer !== -1
                    ? `<span class="percentage-bar" style="width: ${calculatePercentage(poll.answerWeights[i], poll.pollCount)}%; opacity: 1;"></span>
                               <span class="percentage-value">${calculatePercentage(poll.answerWeights[i], poll.pollCount)}%</span>`
                    : `<span class="percentage-bar" style="width: 0%; opacity: 0;"></span>
                               <span class="percentage-value" style="opacity: 0;"></span>`
                }
                    </div>
                `).join("")}
            </div>
        </div>
    `;
            return pollHTML;
        }


        // Render all polls and check user answers
        function renderAllPolls() {
            shuffleArray(polls);
            fetch(`/user-answered-polls/${userId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const userPolls = data.answeredPolls;
                        pollContainer.innerHTML = '';

                        polls.forEach((poll, index) => {
                            const userPoll = userPolls.find(p => p.pollId === poll._id);
                            poll.selectedAnswer = userPoll ? userPoll.selectedAnswer : -1;
                            pollContainer.innerHTML += renderPoll(poll, index);
                        });
                    } else {
                        console.error('Error fetching user polls:', data.message);
                    }
                })
                .catch(error => console.error('Error:', error));
        }

        // Handle poll answer selection
        function markAnswer(pollIndex, answerIndex) {
            let poll = polls[pollIndex];

            // Prevent users from selecting an answer if they've already answered this poll
            if (poll.selectedAnswer !== -1) {
                return; // Exit if the user has already answered this poll
            }

            // Update the selected answer and poll statistics
            poll.answerWeights[answerIndex] += 1;
            poll.pollCount += 1;
            poll.selectedAnswer = answerIndex;


            try {
                document.querySelector(`#poll-${pollIndex} .answer.selected`)?.classList.remove("selected");
            } catch (msg) { }


            document.querySelectorAll(`#poll-${pollIndex} .answer`)[answerIndex].classList.add("selected");


            // Show the updated results immediately after selecting the answer
            showResults(pollIndex);

            // Save the selected answer to the database
            saveUserPollAnswer(poll._id, answerIndex);


            // Disable further answer selection for this poll
            disablePollSelection(pollIndex);
        }


        // Disable further selection for a poll
        function disablePollSelection(pollIndex) {
            const answers = document.querySelectorAll(`#poll-${pollIndex} .answer`);
            answers.forEach(answer => answer.classList.add('disabled'));
        }

        // Save user's selected poll answer to the backend
        function saveUserPollAnswer(pollId, selectedAnswer) {
            const category = 'health'; // Replace this with the appropriate category from your application logic
            fetch(`/save-user-answer/${category}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ userId, pollId, selectedAnswer }),
            })
                .then(response => response.json())
                .then(data => {
                    if (!data.success) {
                        console.error('Error saving user answer:', data.message);
                    }
                })
                .catch(error => console.error('Error:', error));
        }

        // Display poll results
        function showResults(pollIndex) {
            let poll = polls[pollIndex];
            let answers = document.querySelectorAll(`#poll-${pollIndex} .answer`);

            for (let i = 0; i < answers.length; i++) {
                // If the user has answered the poll, show the percentage bar
                let percentage = calculatePercentage(poll.answerWeights[i], poll.pollCount);

                // Display the percentage bar and value for each option
                let percentageBar = answers[i].querySelector(".percentage-bar");
                if (percentageBar) {
                    percentageBar.style.width = percentage + "%";
                    percentageBar.style.opacity = 1; // Ensure the bar is visible
                }

                let percentageValue = answers[i].querySelector(".percentage-value");
                if (percentageValue) {
                    percentageValue.innerText = percentage + "%";
                    percentageValue.style.opacity = 1; // Ensure the value is visible
                }
            }
        }





        // Fetch polls when the page loads
        document.addEventListener("DOMContentLoaded", fetchPolls);
    </script>

</body>

</html>